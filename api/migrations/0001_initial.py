# Generated by Django 3.0.7 on 2022-06-22 04:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=50, unique=True, verbose_name='病院名・もしくは法人名')),
                ('office_name', models.CharField(max_length=50, unique=True, verbose_name='事業所名')),
                ('postal_code', models.CharField(max_length=7, verbose_name='病院もしくは法人の郵便番号')),
                ('address', models.CharField(max_length=50, verbose_name='病院もしくは法人の住所')),
                ('representative_name', models.CharField(max_length=50, verbose_name='病院もしくは法人の担当者名')),
                ('phone_number', models.CharField(max_length=11, verbose_name='病院もしくは法人の担当者電話番号')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='病院もしくは法人の担当者メールアドレス')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='登録日時')),
                ('updated_at', models.DateTimeField(auto_now_add=True, verbose_name='更新日時')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Iryo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('age', models.IntegerField(verbose_name='ご年齢')),
                ('classification', models.CharField(choices=[('区分１', '区分１'), ('区分２', '区分２'), ('区分３', '区分３'), ('区分４', '区分４'), ('区分５', '区分５'), ('区分６', '区分６')], default='区分１', max_length=50, verbose_name='障がい区分')),
                ('disability_type', models.CharField(choices=[('障がい種別１', '障がい種別１'), ('障がい種別２', '障がい種別２'), ('障がい種別３', '障がい種別３'), ('障がい種別５', '障がい種別５')], default='障がい種別１', max_length=50, verbose_name='障がい種別')),
                ('service_type', models.CharField(choices=[('共同生活援助（介護サービス包括型）', '共同生活援助（介護サービス包括型）'), ('就労継続支援B型', '就労継続支援B型'), ('生活介護', '生活介護'), ('計画相談支援', '計画相談支援'), ('重度訪問介護', '重度訪問介護'), ('児童発達支援', '児童発達支援'), ('障がい児相談支援', '障がい児相談支援')], default='共同生活援助（介護サービス包括型）', max_length=50, verbose_name='サービスの種別')),
                ('gender', models.CharField(choices=[('共同生活援助（介護サービス包括型）', '共同生活援助（介護サービス包括型）'), ('就労継続支援B型', '就労継続支援B型'), ('生活介護', '生活介護'), ('計画相談支援', '計画相談支援'), ('重度訪問介護', '重度訪問介護'), ('児童発達支援', '児童発達支援'), ('障がい児相談支援', '障がい児相談支援')], default='共同生活援助（介護サービス包括型）', max_length=50, verbose_name='性別')),
                ('contract_status', models.CharField(choices=[('未確定', '未確定'), ('商談中', '商談中'), ('契約済', '契約済')], default='未確定', max_length=50, verbose_name='契約状況')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='登録日時')),
                ('updated_at', models.DateTimeField(auto_now_add=True, verbose_name='更新日時')),
            ],
            options={
                'db_table': 'iryo',
            },
        ),
        migrations.CreateModel(
            name='UserService',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(choices=[('共同生活援助（介護サービス包括型）', '共同生活援助（介護サービス包括型）'), ('就労継続支援B型', '就労継続支援B型'), ('生活介護', '生活介護'), ('計画相談支援', '計画相談支援'), ('重度訪問介護', '重度訪問介護'), ('児童発達支援', '児童発達支援'), ('障がい児相談支援', '障がい児相談支援')], default='共同生活援助（介護サービス包括型）', max_length=50, verbose_name='サービス名')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='登録日時')),
                ('updated_at', models.DateTimeField(auto_now_add=True, verbose_name='更新日時')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL, verbose_name='病院名・もしくは法人名')),
            ],
            options={
                'db_table': 'user_service',
            },
        ),
        migrations.CreateModel(
            name='IryoAddress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('address_prefecture', models.CharField(max_length=50, verbose_name='ご利用を希望する都道府県')),
                ('address_city', models.CharField(max_length=50, verbose_name='ご利用を希望する市区町村')),
                ('iryo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='iryo', to='api.Iryo', verbose_name='利用者')),
            ],
            options={
                'db_table': 'iryo_address',
            },
        ),
    ]
